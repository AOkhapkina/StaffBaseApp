MVC (Model View Controller)
Model –компонент, отвечающий заданные приложения и за работу с этими данными
View (представление) –компонент, отвечающий за взаимодействие с пользователем. View отображает данные и определяет внешний вид приложения.
Controller –компонент, отвечающий за связь между View и Model. Именно здесь сосредоточена логика работы приложения(бизнес логика)

Spring MVC
Spring MVC –это фреймворкдля создания web приложенийна Java, в основе которого лежит шаблон проектирования MVC
Естественно, в Spring MVC мы можем использовать весь основной функционал Spring: IoC, DI

Spring MVC
Front Controller также известен под именем DispatcherServlet. Он является частью Spring.
Controller –центр управления, мозг Spring MVC приложения.
Model –контейнер для хранения данных.

Spring MVC
View –web страница, которую можно создать с помощью html, jsp, Thymeleafит.д.
Часто при отображении View использует данные из Model.
JSP –Java Server Page. Представляет собой html код с небольшим добавлением кода Java
JSTL -Java Server Pages StandartTag Library. Это расширение спецификации JSP.
Из чего будет состоять Spring MVC приложение:
•Конфигурация Spring
•Описание Spring бинов
•Web страницы
Конфигурация Spring MVC
1. Создаём maven проект, используя maven-archetype-webapp
2. Добавляем зависимости в pomфайл
3. Скачиваем Tomcat и связываем его со средой разработки
4. Добавляем папки/пакеты в иерархию классов
5. Конфигурируем web.xml
6. Конфигурируем applicationContext.xml
Controller
Методы в Controller могут:
•Называться как угодно
•Иметь параметры
•Возвращать не только String

Model
Model –контейнер для хранения данных (DB, mySQL, etc).
Находясь в Controller, мы можем добавлять данные в Model. И затем эти данные использоватьво View.

@RequestParam
При работе с формами, аннотация @RequestParam позволяет нам связывать поле формы с параметром метода из Controller-а

Формы Spring MVC
form:form–основная форма, содержащая в себе другие формы. Другими словами, форма-контейнер
form:input–форма, предназначенная для текста. Используется всего лишь одна строка

При работе с формами, аннотация @ModelAttributeа параметре метода Controller-а даёт доступ к конкретному атрибуту Модели

form:select–форма, предназначенная дляреализации выпадающего списка

form:radiobutton–форма, предназначенная дляреализации radio button (переключатель)

form:checkbox–форма, предназначенная дляреализации check box (флажок)
Hibernate
JPA (Java Persistence API) –это стандартная спецификация, которая описывает систему для управления сохранением Java объектов в таблицы базы данных
Hibernate –самая популярная реализация спецификации JPA

Таким образом JPA описывает правила, а Hibernate реализует их.
Валидацияформ Spring MVC
Java Standard Bean Validation API–это спецификация, которая описывает правила валидации
Hibernate Validator –реализация правил, описанных в Java Standard Bean Validation API
@Size –размер поля должен быть между заданными границами
@NotEmpty–поле не должно быть пустым
@NotBlank–поле не должно быть пустыми не должно быть заполнено только пробелами
form:errors-форма, отображающая ошибки
@Valid означает, что атрибут должен пройти процесс валидации
BindingResult содержит результат этой валидации
@Min –числовое значение должно быть больше или равно указанного параметра
@Max –числовое значение должно быть меньше или равно указанному параметру
@Pattern –значение поля должно соответствовать определённому Регулярному Выражению